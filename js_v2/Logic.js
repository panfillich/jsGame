//Формируем логику игры, (тригеры и нужная послед-ность анимаций)function Logic(setting, map){	 this._setting = setting;	 this._map = map;	 	 //Для тестов	 this.x = 0;	 this.y = 0;}//Действия за 1 кадрLogic.prototype.animation = function(){		var setting = this._setting;		//Высота и ширина карты карты	var map_height = setting.map.size.y;	var map_width = setting.map.size.x;		//Очищаем карту	setting.context.clearRect(0, 0, map_width, map_height);		//Движения		//Проверки			//Рисуем гексагоны	this._map.nodes.forEach(function(node,i,nodes){		this.x = getRandomArbitary(-1,1) + this.x;			this.y = getRandomArbitary(-1,1) + this.y;					function getRandomArbitary(min, max)		{			return Math.random() * (max - min) + min;		}				setting.context.drawImage(setting.image_store[0].img, node.pos.drow_point.x+this.x, node.pos.drow_point.y+this.y, setting.hex.size.x, setting.hex.size.y );	}.bind(this));}//Создаем гексагон, который движется к ноде. инициализировавшей созданиеLogic.prototype.createHex = function(node){	var nodes_gen = this._map.nodes_gen;	//Блокируем генератор	nodes_gen[node.id_gen].is_empty = false;		//Создаем гексагон	//node.hex = new Hex();}//Уничтожаем гексагон